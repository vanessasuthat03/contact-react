{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","Contact","id","payload","map","contact","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","key","Header","vanessasbranding","href","defaultProps","NotFound","Test","console","log","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","onSubmit","e","preventDefault","newContact","post","history","push","target","EditContact","updContact","match","params","put","App","basename","process","exact","path","component","About","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.4dc48a01.chunk.js","sourcesContent":["import React, { Component } from \"react\"\nimport axios from \"axios\"\n// import Contact from \"./components/contacts/Contact\"\n\nconst Context = React.createContext()\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          Contact => Contact.id !== action.payload\n        )\n      }\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      }\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      }\n    default:\n      return state\n  }\n}\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  }\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\")\n    this.setState({ contacts: res.data })\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    )\n  }\n}\nexport const Consumer = Context.Consumer\n","import React, { Component } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport PropTypes from \"prop-types\"\nimport { Consumer } from \"../../context\"\nimport axios from \"axios\"\n// import { valueToNode } from \"@babel/types\"\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  }\n  onDeleteClick = async (id, dispatch) => {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n    dispatch({ type: \"DELETE_CONTACT\", payload: id })\n  }\n\n  render() {\n    const { id, name, email, phone } = this.props.contact\n    const { showContactInfo } = this.state\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{\" \"}\n                <i\n                  onClick={() =>\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo\n                    })\n                  }\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"1rem\"\n                    }}\n                  ></i>\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n}\nexport default Contact\n","import React, { Component } from \"react\"\nimport Contact from \"./Contact\"\nimport { Consumer } from \"../../context\"\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\nexport default Contacts\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"react-router-dom\"\n\nconst Header = props => {\n  const { vanessasbranding } = props\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {vanessasbranding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\"></i> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\"></i> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\"></i> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n    // <div>\n    //   <h1>{vanessasbranding}</h1>\n    //   {/* <h1 style={headingStyle}>{vanessasbranding}</h1> styling finns i const headingStyle*/}\n    //   {/* <h1 style={{ color: \"red\", fontSize: \"50px\" }}>{vanessasbranding}</h1> inline styling */}\n    // </div>\n  )\n}\n\nHeader.defaultProps = {\n  vanessasbranding: \"My App\"\n}\n\nHeader.propTypes = {\n  vanessasbranding: PropTypes.string.isRequired\n}\n// const headingStyle = {\n//   color: \"green\",\n//   fontSize: \"50px\"\n// }\nexport default Header\n","import React from \"react\"\n\nexport default function() {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  )\n}\n","import React from \"react\"\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  )\n}\n","import React, { Component } from \"react\"\n\nclass Test extends Component {\n  componentDidMount() {\n    console.log(\"componentDidMount...\")\n  }\n  render() {\n    return (\n      <div>\n        <h1>Test Component</h1>\n      </div>\n    )\n  }\n}\nexport default Test\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classnames from \"classnames\"\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  )\n}\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n}\nTextInputGroup.defaultProps = {\n  type: \"text\"\n}\nexport default TextInputGroup\n","import React, { Component } from \"react\"\nimport { Consumer } from \"../../context\"\nimport TextInputGroup from \"../layout/TextInputGroup\"\n// import { v1 as uuid } from \"uuid\"\nimport axios from \"axios\"\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault()\n    const { name, email, phone } = this.state\n    // Check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } })\n      return\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } })\n      return\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } })\n      return\n    }\n    const newContact = {\n      //   id: uuid(),\n      name,\n      email,\n      phone\n    }\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    )\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data })\n\n    //Clear state\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    })\n    this.props.history.push(\"/\")\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value })\n  render() {\n    const { name, email, phone, errors } = this.state\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    // type=\"number\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\nexport default AddContact\n","import React, { Component } from \"react\"\nimport { Consumer } from \"../../context\"\nimport TextInputGroup from \"../layout/TextInputGroup\"\n// import { v1 as uuid } from \"uuid\"\nimport axios from \"axios\"\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  }\n\n  async componentDidMount() {\n    const { id } = this.props.match.params\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    )\n    const contact = res.data\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    })\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault()\n    const { name, email, phone } = this.state\n    // Check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } })\n      return\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } })\n      return\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } })\n      return\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    }\n\n    const { id } = this.props.match.params\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    )\n\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data })\n\n    //Clear state\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    })\n    this.props.history.push(\"/\")\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value })\n  render() {\n    const { name, email, phone, errors } = this.state\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\nexport default EditContact\n","import React, { Component } from \"react\"\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\" // kan byta ut BrowserRouter till HashRouter\nimport Contacts from \"./components/contacts/Contacts\"\nimport Header from \"./components/layout/Header\"\nimport About from \"./components/pages/About\"\nimport NotFound from \"./components/pages/NotFound\"\nimport Test from \"./components/test/Test\"\nimport AddContact from \"./components/contacts/AddContact\"\nimport EditContact from \"./components/contacts/EditContact\"\nimport { Provider } from \"./context\"\n\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"./App.css\"\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            <Header vanessasbranding=\"Contact Vanessa\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}